<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="www.dakai.link.modules.account.dao.AccountDao">

    <resultMap type="www.dakai.link.modules.account.entity.Account" id="AccountMap">
        <result property="id" column="id" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result property="token" column="token" jdbcType="VARCHAR"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="phone" column="phone" jdbcType="VARCHAR"/>
        <result property="remark" column="remark" jdbcType="VARCHAR"/>
        <result property="createUser" column="create_user" jdbcType="VARCHAR"/>
        <result property="updateUser" column="update_user" jdbcType="VARCHAR"/>
        <result property="deleted" column="deleted" jdbcType="BOOLEAN"/>
        <result property="code" column="code" jdbcType="VARCHAR"/>
        <result property="username" column="username" jdbcType="VARCHAR"/>
        <result property="column7" column="column_7" jdbcType="INTEGER"/>
        <result property="email" column="email" jdbcType="VARCHAR"/>
        <result property="enabled" column="enabled" jdbcType="BOOLEAN"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="AccountMap">
        select
          id, create_time, update_time, password, token, name, phone, remark, create_user, update_user, deleted, code, username, column_7, email, enabled
        from account
        where  = #{}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="AccountMap">
        select
          id, create_time, update_time, password, token, name, phone, remark, create_user, update_user, deleted, code, username, column_7, email, enabled
        from account
        <where>
            <if test="id != null and id != ''">
                and id = #{id}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
            <if test="token != null and token != ''">
                and token = #{token}
            </if>
            <if test="name != null and name != ''">
                and name = #{name}
            </if>
            <if test="phone != null and phone != ''">
                and phone = #{phone}
            </if>
            <if test="remark != null and remark != ''">
                and remark = #{remark}
            </if>
            <if test="createUser != null and createUser != ''">
                and create_user = #{createUser}
            </if>
            <if test="updateUser != null and updateUser != ''">
                and update_user = #{updateUser}
            </if>
            <if test="deleted != null">
                and deleted = #{deleted}
            </if>
            <if test="code != null and code != ''">
                and code = #{code}
            </if>
            <if test="username != null and username != ''">
                and username = #{username}
            </if>
            <if test="column7 != null">
                and column_7 = #{column7}
            </if>
            <if test="email != null and email != ''">
                and email = #{email}
            </if>
            <if test="enabled != null">
                and enabled = #{enabled}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from account
        <where>
            <if test="id != null and id != ''">
                and id = #{id}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
            <if test="token != null and token != ''">
                and token = #{token}
            </if>
            <if test="name != null and name != ''">
                and name = #{name}
            </if>
            <if test="phone != null and phone != ''">
                and phone = #{phone}
            </if>
            <if test="remark != null and remark != ''">
                and remark = #{remark}
            </if>
            <if test="createUser != null and createUser != ''">
                and create_user = #{createUser}
            </if>
            <if test="updateUser != null and updateUser != ''">
                and update_user = #{updateUser}
            </if>
            <if test="deleted != null">
                and deleted = #{deleted}
            </if>
            <if test="code != null and code != ''">
                and code = #{code}
            </if>
            <if test="username != null and username != ''">
                and username = #{username}
            </if>
            <if test="column7 != null">
                and column_7 = #{column7}
            </if>
            <if test="email != null and email != ''">
                and email = #{email}
            </if>
            <if test="enabled != null">
                and enabled = #{enabled}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="" useGeneratedKeys="true">
        insert into account(id, create_time, update_time, password, token, name, phone, remark, create_user, update_user, deleted, code, username, column_7, email, enabled)
        values (#{id}, #{createTime}, #{updateTime}, #{password}, #{token}, #{name}, #{phone}, #{remark}, #{createUser}, #{updateUser}, #{deleted}, #{code}, #{username}, #{column7}, #{email}, #{enabled})
    </insert>

    <insert id="insertBatch" keyProperty="" useGeneratedKeys="true">
        insert into account(id, create_time, update_time, password, token, name, phone, remark, create_user, update_user, deleted, code, username, column_7, email, enabled)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.id}, #{entity.createTime}, #{entity.updateTime}, #{entity.password}, #{entity.token}, #{entity.name}, #{entity.phone}, #{entity.remark}, #{entity.createUser}, #{entity.updateUser}, #{entity.deleted}, #{entity.code}, #{entity.username}, #{entity.column7}, #{entity.email}, #{entity.enabled})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="" useGeneratedKeys="true">
        insert into account(id, create_time, update_time, password, token, name, phone, remark, create_user, update_user, deleted, code, username, column_7, email, enabled)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.id}, #{entity.createTime}, #{entity.updateTime}, #{entity.password}, #{entity.token}, #{entity.name}, #{entity.phone}, #{entity.remark}, #{entity.createUser}, #{entity.updateUser}, #{entity.deleted}, #{entity.code}, #{entity.username}, #{entity.column7}, #{entity.email}, #{entity.enabled})
        </foreach>
        on duplicate key update
        id = values(id),
        create_time = values(create_time),
        update_time = values(update_time),
        password = values(password),
        token = values(token),
        name = values(name),
        phone = values(phone),
        remark = values(remark),
        create_user = values(create_user),
        update_user = values(update_user),
        deleted = values(deleted),
        code = values(code),
        username = values(username),
        column_7 = values(column_7),
        email = values(email),
        enabled = values(enabled)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update account
        <set>
            <if test="id != null and id != ''">
                id = #{id},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
            <if test="password != null and password != ''">
                password = #{password},
            </if>
            <if test="token != null and token != ''">
                token = #{token},
            </if>
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="phone != null and phone != ''">
                phone = #{phone},
            </if>
            <if test="remark != null and remark != ''">
                remark = #{remark},
            </if>
            <if test="createUser != null and createUser != ''">
                create_user = #{createUser},
            </if>
            <if test="updateUser != null and updateUser != ''">
                update_user = #{updateUser},
            </if>
            <if test="deleted != null">
                deleted = #{deleted},
            </if>
            <if test="code != null and code != ''">
                code = #{code},
            </if>
            <if test="username != null and username != ''">
                username = #{username},
            </if>
            <if test="column7 != null">
                column_7 = #{column7},
            </if>
            <if test="email != null and email != ''">
                email = #{email},
            </if>
            <if test="enabled != null">
                enabled = #{enabled},
            </if>
        </set>
        where  = #{}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from account where  = #{}
    </delete>

</mapper>

